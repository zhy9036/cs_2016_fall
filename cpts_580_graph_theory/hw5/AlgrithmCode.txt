
public class GraphColoring {
	int[][] graph;
	int k;
	
	public GraphColoring(int[][] graph){
		this.graph = graph;
		k = graph.length;
	}
	
	public void largeDegreeFirst(){
		int numLeft = k;
		int[] degree = new int[k];
		boolean[] used = new boolean[k];
		for(int i = 0; i < k; i++){
			int d = 0;
			used[i] = false;
			for(int j = 0; j < k; j++){
				if(graph[i][j] == 1){
						d++;
				}
			}
			degree[i] = d;
		}
		int[] color = new int[k];
		boolean available[] = new boolean[k];
		for(int i = 0; i < k; i++){
			color[i] = -1;
			available[i] = true;
		}
		while(numLeft > 0){
			int temp = 0;
			int index = 0;
			for(int i = 0; i < k; i++){
				if(!used[i]){
					temp = (temp < degree[i])? degree[i]:temp;
					index = i;
				}
			}
			used[index] = true;
			
			for(int j = 0; j < k; j++){
				if(graph[index][j] == 1
						&& color[j] != -1){
					available[color[j]] = false;
				}
			}
			
			//find 1st available color
			int c;
			for(c = 0; c < k; c++){
				if(available[c] == true)
					break;
			}
			color[index] = c;
			numLeft--;
			
			for(int j = 0; j < k; j++){
				if(graph[index][j] == 1
						&& color[j] != -1){
					available[color[j]] = true;
				}
			}
		}
		for(int i = 0; i < k; i++){
			System.out.println("Vertex " + (char)(i+'a') + " --->  Color "
                    + color[i]);
		}
		System.out.println();
	}
	
	public void sequentialColoring(){
		int[] color = new int[k];
		boolean available[] = new boolean[k];
		color[0] = 0;
		available[0] = false;
		for(int i = 1; i < k; i++){
			color[i] = -1;
			available[i] = true;
		}
		
		for(int i = 1; i < k; i++){
			for(int j = 0; j < k; j++){
				if(graph[i][j] == 1
						&& color[j] != -1){
					available[color[j]] = false;
				}
			}
			
			//find 1st available color
			int c;
			for(c = 0; c < k; c++){
				if(available[c] == true)
					break;
			}
			color[i] = c;
			
			for(int j = 0; j < k; j++){
				if(graph[i][j] == 1
						&& color[j] != -1){
					available[color[j]] = true;
				}
			}		
		}
		for(int i = 0; i < k; i++){
			System.out.println("Vertex " + (char)(i+'a') + " --->  Color "
                    + color[i]);
		}
		System.out.println();
	}
}
