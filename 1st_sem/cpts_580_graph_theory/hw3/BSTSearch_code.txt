/******************************************
Yang Zhang
11529139
CS 580 HW3
*******************************************/ 
 /*****************************************
 BST Node class
 *****************************************/

public class BSTreeNode {
	BSTreeNode left;
	BSTreeNode right;
	int data;
	
	public BSTreeNode(int data){
		this(data, null, null);
	}
	
	public BSTreeNode(int data, BSTreeNode left, BSTreeNode right){
		this.data = data;
		this.left = left;
		this.right = right;
	}
	
}


 /*****************************************
 BST search algorithm
 *****************************************/
public class BSTSearch {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] ary = new int[]{3,8,9,12,14,22,23,28,35,40,46};
		BSTreeNode root = constructTree(ary, 0, ary.length-1);
		System.out.println("search for 23: " + search(root, 23));
		System.out.println("search for 25: " + search(root, 25));

	}
	
	public static BSTreeNode constructTree(int[] ary, int start, int end){
		if (start > end) return null;
		int mid = (start + end)/2;
		BSTreeNode root = new BSTreeNode(mid);
		root.left = constructTree(ary, start, mid-1);
		root.right = constructTree(ary, mid+1, end);
		return root;
	}
	
	
	public static boolean search(BSTreeNode root, int key){
		if (root == null) return false;
		else if(key == root.data) return true;
		else if(key > root.data) return search(root.right, key);
		else return search(root.left, key);
	}

}